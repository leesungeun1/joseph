/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2017-12-20 03:51:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.g;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ajax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 상세보기(1개의 데이터 추출)\r\n");
      out.write("\t\t$(\"#one\").one(\"click\",function(){\r\n");
      out.write("//\t\t$(\"#one\").click(function(){\r\n");
      out.write("\t\t\t  var g_no = 1;\t\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  $.ajax({\r\n");
      out.write("\t\t\t\t\ttype:'post',\r\n");
      out.write("\t\t\t\t\turl:'/resttest/cont.do',\r\n");
      out.write("\t\t\t\t\tdata: {\"g_no\":g_no},\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tdataType:'text', \r\n");
      out.write("\t\t\t\t\tsuccess:function(result){\r\n");
      out.write("\t\t\t\t\t\talert(result)\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"result: \" + result);\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//json을 javascript객체로 변환\r\n");
      out.write("\t\t\t\t\t\tvar obj = JSON.parse(result);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$(\"#treeData\").append(\r\n");
      out.write("\t\t                   \"<tr><td>번호</td>\" + \"<td>이름</td>\" \r\n");
      out.write("\t\t                     + \"<td>제목</td>\" + \"<td>비밀번호</td>\"\r\n");
      out.write("\t\t                     + \"<td>내용</td>\" + \"<td>조회수</td>\" \r\n");
      out.write("\t\t                     + \"<td>날짜</td></tr>\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t      //    \t\t$.each(result, function() {\r\n");
      out.write("\t\t          \t\t\t\r\n");
      out.write("\t\t                \t$(\"#treeData\").append(\"<tr>\" + \"<td>\"                 \r\n");
      out.write("\t\t                        + obj.g_no + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        + obj.g_name + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        + obj.g_title + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        + obj.g_pwd + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        + obj.g_cont + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        + obj.g_hit + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        + obj.g_date + \"</td>\" + \"</tr>\");\r\n");
      out.write("\t\t     //        \t});\t// each() end\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}}); // ajax() end\r\n");
      out.write("\t\t});\t// click() end\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 전체 데이터 추출\r\n");
      out.write("\t\t$(\"#all\").one(\"click\",function(){\t\t\t \t\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  $.ajax({\r\n");
      out.write("\t\t\t\t\ttype:'get',\r\n");
      out.write("\t\t\t\t\turl:'/resttest/g_list.do',\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tdataType:'text', \r\n");
      out.write("\t\t\t\t\tsuccess:function(result){\r\n");
      out.write("\t\t\t\t\t\talert(result)\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"result: \" + result);\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tvar obj = JSON.parse(result);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$(\"#allData\").append(\r\n");
      out.write("\t\t                   \"<tr><td>번호</td>\" + \"<td>이름</td>\" \r\n");
      out.write("\t\t                     + \"<td>제목</td>\" + \"<td>비밀번호</td>\"\r\n");
      out.write("\t\t                     + \"<td>내용</td>\" + \"<td>조회수</td>\" \r\n");
      out.write("\t\t                     + \"<td>날짜</td></tr>\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tvar output='';\r\n");
      out.write("\t\t          \t\t$.each(obj, function(index,item) {         \t\t\t\t\t          \t\t\t\r\n");
      out.write("\t\t          \t\t\t\t\t\t          \t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\toutput += \"<tr>\" + \"<td>\"\r\n");
      out.write("\t\t                        output += item.g_no + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        output += item.g_name + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        output += item.g_title + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        output += item.g_pwd + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        output += item.g_cont + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        output += item.g_hit + \"</td>\" + \"<td>\"\r\n");
      out.write("\t\t                        output += item.g_date + \"</td>\" + \"</tr>\"               \r\n");
      out.write("\t\t       \t\t\t\t\t\t\t\r\n");
      out.write("\t\t             \t});\t// each() end\t\t             \t\r\n");
      out.write("\t\t          \t\t\t$(\"#allData\").append(output);\r\n");
      out.write("//\t                        document.getElementById(\"allData\").innerHTML = output;\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}});  // ajax() end\r\n");
      out.write("\t\t});\t// click() end\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}); // ready() end\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write(" <input type=\"button\" value=\"상세보기\" id=\"one\">\r\n");
      out.write(" <input type=\"button\" value=\"전체목록\" id=\"all\"> \r\n");
      out.write(" \r\n");
      out.write(" <table border=1 id=\"treeData\"></table> \r\n");
      out.write(" <table border=1 id=\"allData\"></table> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
