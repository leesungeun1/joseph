/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2017-12-21 05:50:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.crawl;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import m2member.*;

public final class cwl_005fready_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/javax.servlet.jsp.jstl-1.2.1.jar", Long.valueOf(1513762453500L));
    _jspx_dependants.put("jar:file:/C:/STSWORKSPACE/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/1jojo/WEB-INF/lib/javax.servlet.jsp.jstl-1.2.1.jar!/META-INF/c.tld", Long.valueOf(1323225978000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("m2member");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<title>Scraping Ready</title>\n");
      out.write("  <script src=\"http://code.jquery.com/jquery-latest.js\"></script>\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function ButtonClicked()\n");
      out.write("{\n");
      out.write("   document.getElementById(\"Content\").style.display = \"none\"; // to undisplay\n");
      out.write("   document.getElementById(\"buttonreplacement\").style.display = \"block\"; // to display\n");
      out.write("   return true;\n");
      out.write("}\n");
      out.write("var FirstLoading = true;\n");
      out.write("\n");
      out.write("function RestoreSubmitButton()\n");
      out.write("{\n");
      out.write("   if( FirstLoading )\n");
      out.write("   {\n");
      out.write("      FirstLoading = false;\n");
      out.write("      return;\n");
      out.write("   }\n");
      out.write("   document.getElementsById(\"Content\")[0].style.display = \"block\"; // to display\n");
      out.write("   document.getElementById(\"buttonreplacement\").style.display = \"none\"; // to undisplay\n");
      out.write("}\n");
      out.write("// To disable restoring submit button, disable or delete next line.\n");
      out.write("document.onfocus = RestoreSubmitButton;\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div>\n");
      out.write("<header>\n");
      out.write("\t");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("</header>\n");
      out.write("</div>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("\t<div class=\"container-fluid container\" id=\"Content\">\n");
      out.write("\t\t<div class=\"row content\">\n");
      out.write("\t\t\t<div class=\"text-left\">\n");
      out.write("<h2>ID및 비밀번호</h2>\n");
      out.write("<form action=\"/1jojo/CrawlAddAction.cr\" method=\"post\"  name=\"boardform\" >");
      out.write("\n");
      out.write("\t\t<label><b>아이디 :</b></label>\n");
      out.write("\t\t<input type=\"text\" name=\"uname\" required=\"required\" disabled=\"disabled\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("\t\t<label><b>비밀번호 : </b></label><input type=\"text\" name=\"psw\" required=\"required\" disabled=\"disabled\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pass}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("\t\t\n");
      out.write("\t<p>해당 id가 실제로 사람인에서 사용하는 id와 비밀번호 입니까?</p>\n");
      out.write("\t<p>(아니라면 사람인 회원가입 이후 다시 해당 ID와 비밀번호로 해당 서비스에 가입한 뒤 이 페이지로 접속이 요구됩니다.)</p>\n");
      out.write("\t<p>회원정보 변경은 상단의 탭에 위치해 있습니다.</p>\n");
      out.write("\t<p style=\"red\"><b>주의 (필독!)</b></p>\n");
      out.write("\t<ol>\n");
      out.write("\t\t<li>해당 서비스는 사람인으로 부터 인가받은 서비스가 아닌 개인적인 프로젝트 테스트 및 포트폴리오용으로 작성된 코드입니다.\n");
      out.write("\t\t<li>때문에 보안이 취약할 수 밖에 없으므로 해당 서비스에 쓸 용도로 쓸 임시 비밀번호 설정이 필요합니다.\n");
      out.write("\t\t<li>어디까지나 취준생의 편의라는 공익를 위해 만든 것이며 개인 하드에만 해당 정보를 넣는 것 외에는 스크래핑은 불법이 될 소지가 큽니다. 자신이 이 사이트의 프로그램을 이용해 크롤링한 데이터를 웹에 배포하지 않도록 주의 바랍니다.\n");
      out.write("\t\t<li>SNS 계정 접속, 네이버 계정, 구글 계정 접속과 같은 SSO 기능은 제공하지 않습니다. 해당 계정으로 가입하셨다면, 사람인 회원 가입을 다시 한 뒤에 이 서비스에 다시 접속하셔서 아이디와 비밀번호를 변경후에 다시 시도 바랍니다.\n");
      out.write("\t\t<li>해당 스크래핑은 페이지 구조가 일정한 형식을 따르지 않나, 검색 결과의 수가 많아지면 상당한 시간이 소요됩니다.\n");
      out.write("\t</ol>\n");
      out.write("\t<input type=\"submit\" id=\"scrapeButton\"  class=\"btn btn-default\" value=\"예(스크래핑 시작)\" onclick=\"ButtonClicked()\">\n");
      out.write("\t<button type=\"button\" class=\"btn btn-default\" onclick=\"window.open('https://www.saramin.co.kr/zf_user/member/registration/join')\">아니오(사람인 회원가입)</button>\n");
      out.write("\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("<div id=\"buttonreplacement\" style=\"margin-left:30px; display:none;\" align=center>\n");
      out.write("\t<img src=\"/1jojo/crawl/loading_logofinal_by_zegerdon-d60eb1v.gif\" alt=\"loading...\">\n");
      out.write("<pre>시간이 오래 걸릴 경우(30분 이상) 세션이 만료되어 로그아웃 되므로, 적절한 수준까지 공고를 좁혀서 검색하시기 바랍니다.\n");
      out.write("개인 맞춤채용은 최대 50건까지 크롤링 하도록 코딩해두었습니다.(더보기를 클릭하게 해두지 않았습니다.)\n");
      out.write("너무  많은 페이지를 보면 사람인 측에서 봇으로 볼 가능성이 있기 때문입니다.\n");
      out.write("크롤링이 오래 걸리는 페이지의 형식은 다음과 같습니다. 가장 오래걸리는 순입니다.\n");
      out.write("\t1. 이미지 형식 : 아무런 텍스트가 없으면 인식 자체를 하지 못합니다.\n");
      out.write("\t2. 단순 텍스트 형식 : 테이블이 없다면 인식에서 제외 시켜두었습니다. 자연어 처리에는 너무 많은 연산이 요구되기 때문입니다.\n");
      out.write("\t3. 형식화되지 않은 테이블 : 테이블이 사람인의 양식을 따르지 않는다면 다소 많은 연산이 요구되며 정확도가 떨어집니다.\n");
      out.write("\t4. 하단의 detail_meta 클래스 명이 붙은 곳에 지원자격이 붙은 경우.\n");
      out.write("\t</pre>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /crawl/cwl_ready.jsp(39,1) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("../member/header.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }
}
